version: '3.8'

services:
  processguard:
    build: .
    container_name: processguard
    restart: unless-stopped
    ports:
      - "7500:7500"
    volumes:
      # Configuration (read-write)
      - ./docker-data/config:/app/config
      # Logs (read-write)
      - ./docker-data/logs:/app/logs
      # Data persistence (read-write)
      - ./docker-data/data:/app/data
      # Host process monitoring (read-only)
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/root:ro
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ROOT=/host/root
      - TZ=UTC
    networks:
      - processguard-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7500/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: processguard-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - processguard-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: processguard-nginx
    restart: unless-stopped
    ports:
      - "7501:80"
      - "7502:443"
    volumes:
      - ./docker-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker-config/ssl:/etc/nginx/ssl:ro
      - ./docker-data/logs/nginx:/var/log/nginx
    networks:
      - processguard-network
    depends_on:
      - processguard
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  redis-data:
    driver: local

networks:
  processguard-network:
    driver: bridge